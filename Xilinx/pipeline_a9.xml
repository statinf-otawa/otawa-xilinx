<?xml version="1.0" encoding="UTF-8"?>
<!-- superscalar, variable length, out-of-order pipeline with dynamic branch prediction /-->
<processor class="otawa::hard::Processor"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	
	<!-- DOCUMENTATION
		https://www.digikey.fr/fr/htmldatasheets/production/2108336/0/0/1/xc7z010-1cl225i
		https://documentation-service.arm.com/static/5e8e2ab9fd977155116a7035?token=
		https://www.geeksforgeeks.org/pipelining-in-arm/
		https://documentation-service.arm.com/static/5e8e2ab9fd977155116a7035?token=
		https://documentation-service.arm.com/static/5e8e13b4fd977155116a35eb?token=
		https://documentation-service.arm.com/static/5e8e176afd977155116a3c45?token=
		https://documentation-service.arm.com/static/5f0370fccafe527e86f5bfb2?token=
        https://kolegite.com/EE_library/books_and_lectures/%D0%9C%D0%B8%D0%BA%D1%80%D0%BE%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D0%BE%D1%80%D0%BD%D0%B0%20%D1%81%D1%85%D0%B5%D0%BC%D0%BE%D1%82%D0%B5%D1%85%D0%BD%D0%B8%D0%BA%D0%B0/PVSAE_Lekcii/02_Advanced-System-on-Chip-Design-Education-Kit/05_Arm_Cortex_A9_processor.pdf
	-->
    <!-- TODO : rewrite arch, model-->
	<arch>armv7-a</arch>
	<model>Zynq-7000</model>
	<frequency>1000000000</frequency> CPU frequency: Up to 1 GHz -  Wait for Hugues's feed back 
	<stages>
		<stage id="FE">
			<name>Fetch</name>
			<type>FETCH</type>
            <latency>3</latency>
            <width>2</width>
		</stage>
        <stage id="IQ">
			<name>IQ</name>
			<type>LAZY</type>
            <width>2</width>
		</stage>
		<stage id="DE">
			<name>Decode</name>
			<type>LAZY</type>
            <width>2</width>
		</stage>
		<stage id="REGR"> <!-- Register rename stage -->
			<name>RegR</name>
			<type>LAZY</type>
            <width>2</width>
		</stage>
		<stage id="DIS"> <!-- Dispatch stage -->
			<name>DISPATCH</name>
			<type>LAZY</type>
            <width>2</width>
		</stage>
		<stage id="EXE">
			<name>EXE</name>
			<type>EXEC</type>
            
			<fus>
				<fu id="EXEC_F"> <!-- FPU / NEON  -->
					<name>EXEC_F</name>
					<latency>2</latency> <!-- doc: 6, 38 and 5, 18 -->
					<pipelined>true</pipelined>
				</fu>

				<fu id="EXEC_ALU_MUL"> <!-- MUL / ALU-->
					<name>EXEC_ALU_MUL</name>
					<latency>2</latency> <!-- doc: 7, 203 -->
					<pipelined>true</pipelined>
                    <width>2</width>
				</fu>
				<!-- <fu id="EXEC_ALU"> 198
					<name>EXEC_ALU</name>
					<latency>2</latency> 
					<pipelined>true</pipelined>
				</fu> -->
				<fu id="EXEC_LDST"> <!-- Load and store Unit -->
					<name>EXEC_LDST</name>
					<latency>2</latency> <!-- doc: 7, 202-->
					<pipelined>true</pipelined>
                    <mem>true</mem>                    
				</fu>
			</fus>
			<dispatch>
				<inst> <type>IS_MEM|IS_LOAD|IS_STORE</type> <fu ref="EXEC_LDST"/> </inst>
				<inst> <type>IS_FLOAT</type> <fu ref="EXEC_F"/> </inst>
				<inst> <type>IS_SPECIAL</type> <fu ref="EXEC_F"/> </inst>
                <inst> <type></type> <fu ref="EXEC_ALU_MUL"/> </inst>
			</dispatch>
		</stage>
		<stage id="WB"> <!-- Write back stage-->
			<name>WB</name>
			<type>COMMIT</type>
            <mem>true</mem>
            <width>2</width>
		</stage>
	</stages>
</processor>
