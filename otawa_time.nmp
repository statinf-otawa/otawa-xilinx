canon int(32) "time_branch"
canon int(32) "time_data_normal"
canon int(32) "time_data_pc"
canon int(32) "time_data_shift"
canon int(32) "time_ldm_x1"
canon int(32) "time_ldm_xn"
canon int(32) "time_ldm_xn_pc"
canon int(32) "time_ldr_normal"
canon int(32) "time_ldr_pc"
canon int(32) "time_ldr_unaligned"
canon int(32) "time_mult"
canon int(32) "time_mult_long"
canon int(32) "time_str_normal"
canon int(32) "time_stm_xn"
canon int(32) "time_stm_x1"
canon int(32) "time_swp"
macro time(x) = "SET_TIME"(x)

extend regShift
	reg_shift = 1

extend immShift
	reg_shift = 0


extend	CMP_imm, CMN_imm, TEQ_imm, TST_imm, MSR_imm,
		ADD_imm, ADC_imm, AND_imm, BIC_imm, EOR_imm, MOV_imm, MVN_imm,
		ORR_imm, RSB_imm, RSC_imm, SBC_imm, SUB_imm,
		MSR_shr, MRS
			arm7_time = { time("time_data_normal"); }

extend	ADD_shr, MOV_shr,
		ADC_shr, ADD_shr, AND_shr, BIC_shr, EOR_shr, MVN_shr,
		ORR_shr, RSB_shr, RSC_shr, SBC_shr, SUB_shr
			arm7_time = {
				if rd == 15 then
					if shifter_operand.reg_shift then time("time_data_pc"); else time("time_data_pc"); endif;
				else
					if shifter_operand.reg_shift then time("time_data_shift"); else time("time_data_normal"); endif;
				endif;
			}

extend CMP_shr, CMN_shr, TEQ_shr, TST_shr
	arm7_time = { if shifter_operand.reg_shift then time("time_data_shift"); else time("time_data_normal"); endif; }


extend B_Cond, BX_ARM, SWI
	arm7_time = { time("time_branch"); }

extend SWP
	arm7_time = { time("time_swp"); }

extend LDM
	arm7_time = {
		if reglist & (1 << 15) then
			if "elm::ones"(reglist) > 1 then time("time_ldm_xn_pc"); else time("time_ldm_xn_pc"); endif;
		else
			if "elm::ones"(reglist) > 1 then time("time_ldm_xn"); else time("time_ldm_x1"); endif;
		endif;
	}

extend STM
	arm7_time = {
		if "elm::ones"(reglist) > 1 then time("time_stm_xn"); else time("time_stm_x1"); endif;
	}

extend LDRH_imm, LDRH_shr, LDRSB_imm, LDRSB_shr, LDRSH_imm, LDRSH_shr
	arm7_time = { time("time_ldr_unaligned"); }

extend LDR_imm, LDR_shr
	arm7_time = { if rd == 15 then time("time_ldr_pc"); else time("time_ldr_normal"); endif; }

extend STR_imm, STR_shr, STRH_imm, STRH_shr
	arm7_time = { time("time_str_normal"); }

extend MUL, MLA
	arm7_time = { time("time_mult"); }

extend SMULL, UMULL, SMLAL, UMLAL
	arm7_time = { time("time_mult_long"); }
